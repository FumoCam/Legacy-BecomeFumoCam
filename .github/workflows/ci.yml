# TODO: Fix pipeline when poetry works again
# https://github.com/python-poetry/poetry/issues/7611
name: Static Analysis

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  ci:
    # Needed for snok/install-poetry on windows
    defaults:
      run:
        shell: bash
    runs-on: windows-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set Up Python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Update Pip
        run: python -m pip install --upgrade pip

      - name: Install Poetry
        uses: snok/install-poetry@v1.3.3
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      # Windows (venv caching doesnt behave as expected, cache wheels instead)
      - name: Load cached venv
        id: cached-pip-wheels
        uses: actions/cache@v3
        with:
          path: ~/.cache
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      # Non-windows
      # - name: Load cached venv
      #   id: cached-poetry-dependencies
      #   uses: actions/cache@v3
      #   with:
      #     path: .venv
      #     key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        run: poetry install --no-interaction --no-root

      - name: Install library
        run: poetry install --no-interaction

      - name: Imports Sorted (isort)
        run: poetry run isort --check -v --diff src

      - name: PEP8 Compliance (flake8)
        run: poetry run flake8 src

      - name: Code Formatting (black)
        run: poetry run black --check -v --diff src

      - name: Static Type Check (mypy)
        run: poetry run mypy src

      - name: Security Test (bandit)
        run: poetry run bandit -r -ll -f screen src

      - name: Dependency Security Audit (ossaudit)
        run: |
          poetry export -o requirements-dev.txt --dev --without-hashes
          poetry run python poetry_scripts\run_audit.py
